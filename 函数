c++11 中的 move() 是这样一个函数，它接受一个参数，然后返回一个该参数对应的右值引用.
就这么简单！你甚至可以暂时想像它的原型是这样的(当然是错的，正确的原型我们后面再讲)。

T&& move(T& val);
那么，这样一个 move() 函数，它有什么使用呢？用处大了！回到前面例子，我们用到了 std::swap() 这个函数，回想一下以前我们是怎么想来实现 swap 的呢？

1 void swap(T& a, T& b)
2 {
3     T tmp = a;
4     a = b;
5     b = tmp;
6 }
想像一下，如果 T 是我们之前定义的 holder，这里面就多做了很多无用功，每一个赋值语句，就有一次资源销毁以及一次拷贝！而事实上我们只是要交换 a 与 b 的内容，中间的拷贝都是额外的负担，完全可以考虑消除这些无用功。

1 void swap(T& a, T& b)
2 {
3      T tmp = move(a);
4      a = move(b);
5      b = move(tmp);
6 }



C++中remove  https://www.cnblogs.com/warmbeast/p/5325874.html
